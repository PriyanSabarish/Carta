
      <div className="accordion" id="accordionExample">
        {applications.map((item, index) => {
          const collapseId = `collapse${index + 1}`; // Generate unique ID dynamically
          const isExpanded = expandedIndex === index;

          return (
            <div className="accordion-item" key={index}>
              <h2 className="accordion-header">
                <button
                  className={`accordion-button ${
                    isExpanded ? "" : "collapsed"
                  }`}
                  type="button"
                  onClick={() => handleExpand(index)}
                  aria-expanded={isExpanded ? "true" : "false"}
                  aria-controls={collapseId}
                >
                  {item.title}
                </button>
              </h2>
              <div
                id={collapseId}
                className={`accordion-collapse collapse ${
                  isExpanded ? "show" : ""
                }`}
                data-bs-parent="#accordionExample"
              >
                <div className="accordion-body">
                  <strong>Description: </strong>
                  {item.description}
                </div>
                {/* Add button */}
                <button
                  type="button"
                  className={`btn btn-primary btn-sm ${
                    isExpanded ? "" : "d-none"
                  }`}
                  onClick={() =>
                    handleAdd(index, item._id, item.title, item.description)
                  }
                >
                  Approve
                </button>
                {/* Remove button */}
                <button
                  type="button"
                  className={`btn btn-danger btn-sm ${
                    isExpanded ? "" : "d-none"
                  }`}
                  onClick={() =>
                    handleRemove(index, item._id, item.title, item.description)
                  }
                >
                  Reject
                </button>
              </div>
            </div>
          );
        })}
      </div>